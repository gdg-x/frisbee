apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'play'
apply plugin: 'checkstyle'

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

// Manifest version information!
def versionMajor = 2
def versionMinor = 0
def versionPatch = 2
def versionBuild = 0 // bump for dogfood builds, public betas, etc.
def isDeveloperMode = false

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis

        incremental true
        javaMaxHeapSize "3g"
        threadCount 1
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        resConfigs "en", "cs", "de", "es", "fr", "hi", "it", "ko", "lt", "nl", "pl", "pt-rBR", "pt-rPT", "ru", "sk", "th", "tr", "uk", "zh-rCN", "zh-rHK", "zh-rTW"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //CONFIGURATION
        buildConfigField "Boolean", "ALPHA", "false"
        buildConfigField "Boolean", "DEVELOPER_MODE", String.valueOf(isDeveloperMode)
        
        //KEYS
        buildConfigField "String", "ANDROID_SIMPLE_API_ACCESS_KEY", "\"" + (local_properties.android_simple_api_access_key ?: "") + "\""
        buildConfigField "String", "BROWSER_SIMPLE_API_ACCESS_KEY", "\"" + (local_properties.browser_simple_api_access_key ?: "") + "\""
        buildConfigField "String", "IP_SIMPLE_API_ACCESS_KEY", "\"" + (local_properties.ip_simple_api_access_key ?: "") + "\""
        buildConfigField "String", "HUB_CLIENT_ID", "\"" + (local_properties.hub_client_id ?: "") + "\""
        buildConfigField "String", "PLAY_APP_ID", "\"" + (local_properties.play_app_id ?: "") + "\""
        buildConfigField "String", "GCM_SENDER_ID", "\"" + (local_properties.gcm_sender_id ?: "") + "\""
        buildConfigField "long", "DOORBELL_ID", (local_properties.doorbell_id ?: "0")
        buildConfigField "String", "DOORBELL_APP_KEY", "\"" + (local_properties.doorbell_app_key ?: "") + "\""
        resValue "string", "play_app_id", "\"" + (local_properties.play_app_id ?: "") + "\""
        resValue "string", "android_backup_key", local_properties.android_backup_key ?: ""
        resValue "string", "android_simple_api_access_key", local_properties.android_simple_api_access_key ?: ""
    }

    signingConfigs {
        debug {
            storeFile file("../settings/debug.keystore")
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
        release {
            storeFile file("../settings/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.release
        }
        alpha.initWith(release)
        alpha {
            buildConfigField "Boolean", "ALPHA", "true"
        }
        debug {
            debuggable true
            //packageNameSuffix '.dev'
            //versionNameSuffix '-dev'
        }
    }

    lintOptions {
        abortOnError true
        checkReleaseBuilds false

        warning 'InvalidPackage'
        warning 'ImpliedQuantity'
        warning 'MissingQuantity'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

play {
    serviceAccountEmail = local_properties.play_service_account ?: ''
    pk12File = file(local_properties.play_key_file?:'no-file.p12')
    track = 'alpha'
}

dependencies {
    //Android Support
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:mediarouter-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'

    //Play Services
    compile 'com.google.android.gms:play-services-location:7.0.0'
    compile 'com.google.android.gms:play-services-games:7.0.0'
    compile 'com.google.android.gms:play-services-identity:7.0.0'
    compile 'com.google.android.gms:play-services-plus:7.0.0'
    compile 'com.google.android.gms:play-services-appstate:7.0.0'
    compile 'com.google.android.gms:play-services-analytics:7.0.0'
    compile 'com.google.android.gms:play-services-gcm:7.0.0'

    //Google
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.http-client:google-http-client-gson:1.20.0'
    compile 'com.google.apis:google-api-services-plus:v1-rev126-1.18.0-rc'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'com.google.zxing:android-integration:3.2.0'
    compile 'com.google.zxing:core:3.2.0'

    //Square
    compile 'com.squareup:otto:1.3.6'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    compile 'com.squareup.okio:okio:1.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'

    //Jake Wharton
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.jakewharton.timber:timber:2.7.1'
    compile 'com.jakewharton:disklrucache:2.0.2'

    //Others
    compile 'org.jsoup:jsoup:1.8.1'
    compile 'net.danlew:android.joda:2.7.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile ('de.keyboardsurfer.android.widget:crouton:1.8.5') {
        exclude module: 'support-v4'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }

    //Local
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Test
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
}
