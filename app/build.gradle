apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'
apply plugin: 'checkstyle'

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

def gitSha = org.ajoberstar.grgit.Grgit.open(dir: rootProject.file('.')).head().abbreviatedId
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

// Manifest version information!
def versionMajor = 2
def versionMinor = 2
def versionPatch = 3
def versionBuild = 3 // bump for dogfood builds, public betas, etc.

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis

        javaMaxHeapSize "3g"
    }

    defaultConfig {
        applicationId "org.gdg.frisbee.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        resConfigs "en", "ar", "cs", "de", "es", "fr", "hi", "hy-rAM", "it", "ja", "ko", "lt", "nl", "pl", "pt-rBR", "pt-rPT", "ru", "sk", "th", "tr", "uk", "zh-rCN", "zh-rHK", "zh-rTW"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //CONFIGURATION
        buildConfigField "Boolean", "ALPHA", "false"
        
        //KEYS
        buildConfigField "String", "HUB_CLIENT_ID", "\"" + (local_properties.hub_client_id ?: "") + "\""
        buildConfigField "String", "GCM_SENDER_ID", "\"" + (local_properties.gcm_sender_id ?: "") + "\""
        buildConfigField "long", "DOORBELL_ID", local_properties.doorbell_id ?: "0"
        buildConfigField "String", "DOORBELL_APP_KEY", "\"" + (local_properties.doorbell_app_key ?: "") + "\""
        resValue "string", "play_app_id", "429371117063"
        resValue "string", "android_backup_key", local_properties.android_backup_key ?: ""
    }

    signingConfigs {
        debug {
            storeFile file("../settings/debug.keystore")
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
        release {
            storeFile file("../settings/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    buildTypes {
        release {
            //Library specific proguard files
            //More info: https://github.com/krschultz/android-proguard-snippets
            proguardFile '../settings/proguard/proguard-support-v7-appcompat.pro'
            proguardFile '../settings/proguard/proguard-support-v7-cardview.pro'
            proguardFile '../settings/proguard/proguard-google-play-services.pro'
            proguardFile '../settings/proguard/proguard-google-analytics.pro'
            proguardFile '../settings/proguard/proguard-gson.pro'
            proguardFile '../settings/proguard/proguard-square-okio.pro'
            proguardFile '../settings/proguard/proguard-square-okhttp.pro'
            proguardFile '../settings/proguard/proguard-square-picasso.pro'
            proguardFile '../settings/proguard/proguard-square-retrofit.pro'
            proguardFile '../settings/proguard/proguard-butterknife.pro'
            proguardFile '../settings/proguard/proguard-crashlytics.pro'
            proguardFile '../settings/proguard/proguard-joda-time.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.release

            buildConfigField "String", "IP_SIMPLE_API_ACCESS_KEY", "\"$local_properties.ip_simple_api_access_key\""
            buildConfigField "String", "ANDROID_SIMPLE_API_ACCESS_KEY", "\"$local_properties.android_simple_api_access_key\""
            resValue "string", "android_simple_api_access_key", local_properties.android_simple_api_access_key ?: ""
        }
        alpha.initWith(release)
        alpha {
            debuggable true
            buildConfigField "Boolean", "ALPHA", "true"
        }
        debug {
            ext.enableCrashlytics = false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug

            buildConfigField "String", "IP_SIMPLE_API_ACCESS_KEY", "\"$local_properties.ip_simple_api_access_key_debug\""
            buildConfigField "String", "ANDROID_SIMPLE_API_ACCESS_KEY", "\"$local_properties.android_simple_api_access_key_debug\""
            resValue "string", "android_simple_api_access_key", local_properties.android_simple_api_access_key_debug ?: ""

            multiDexEnabled true
        }
    }

    productFlavors {
        prod
        dev {
            minSdkVersion 21
        }
    }

    variantFilter { variant ->
        if (variant.getFlavors().get(0).name.equals('dev')
                && (variant.buildType.name.equals('release')
                || variant.buildType.name.equals('alpha'))) {
            variant.setIgnore(true);
        }
    }

    lintOptions {
        abortOnError true
        checkReleaseBuilds false

        ignoreWarnings isTravis
        textReport true
        textOutput 'stdout'

        warning 'InvalidPackage'
        warning 'ImpliedQuantity'
        warning 'MissingQuantity'
        warning 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
    
    useLibrary 'org.apache.http.legacy'
}

play {
    serviceAccountEmail = local_properties.play_service_account ?: ''
    pk12File = file(local_properties.play_key_file?:'no-file.p12')
    track = 'alpha'
}

configurations {
    compile.exclude module: 'httpclient'

    all {
        resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    }
}

dependencies {

    //Android Support
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    devCompile 'com.android.support:multidex:1.0.1'

    //Play Services
    compile "com.google.android.gms:play-services-location:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-games:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-identity:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-plus:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-appstate:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-analytics:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-gcm:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-appinvite:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-appindexing:$rootProject.playServicesVersion"

    //Google
    compile 'com.google.http-client:google-http-client-gson:1.20.0'
    compile 'com.google.apis:google-api-services-plus:v1-rev126-1.18.0-rc'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'com.google.zxing:android-integration:3.2.1'
    compile 'com.google.zxing:core:3.2.1'

    //Square
    compile "com.squareup.okhttp:okhttp:$rootProject.okHttpVersion"
    compile "com.squareup.okhttp:okhttp-urlconnection:$rootProject.okHttpVersion"
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    alphaCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"

    //Jake Wharton
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.jakewharton:disklrucache:2.0.2'

    //Others
    compile 'io.doorbell:android-sdk:0.2.2@aar'
    compile 'org.jsoup:jsoup:1.8.2'
    compile "net.danlew:android.joda:$rootProject.jodaTimeVersion"
    compile 'com.tasomaniac:delayed-progress:0.3'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.4@aar') {
        transitive = true;
    }

    //Local
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
    testCompile "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testCompile "org.robolectric:shadows-multidex:$rootProject.robolectricVersion"
    testCompile "joda-time:joda-time:$rootProject.jodaTimeVersion"

    androidTestCompile 'org.assertj:assertj-core:1.7.1'

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.runnerVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
}
